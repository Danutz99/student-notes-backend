
@studentNotesUri=http://localhost:8000/api
@danUserID=108760451373783497228
@danSecondUserID=112646216218646035390
### insert new student
POST {{studentNotesUri}}/student
Accept: application/json
Content-Type: application/json

{
    "StudentId": "{{danUserID}}",
    "StudentName": "Paraschiv-Dan Mamaliga",
    "StudentEmail": "mamaligaparaschiv18@stud.ase.ro",
    "StudentSchool": "ASE Bucuresti"
}

### get student by id
GET {{studentNotesUri}}/student/{{danUserID}}

### insert new course
POST {{studentNotesUri}}/courses
Accept: application/json
Content-Type: application/json

{
    "CourseName": "PAW",
    "CourseTag": "Seminar"
}

### get all courses
GET {{studentNotesUri}}/courses

### add course to student
POST {{studentNotesUri}}/courseStudent
Accept: application/json
Content-Type: application/json

{
    "CourseId": "1",
    "StudentId": "{{danUserID}}"
}

### get all student courses
GET {{studentNotesUri}}/student/{{danUserID}}/courses

### get course students
GET {{studentNotesUri}}/course/1/students

### add note to student course
POST {{studentNotesUri}}/note
Accept: application/json
Content-Type: application/json

{   "NoteTitle": "Smth meaningful",
    "NoteContent": "`Hi, this is a second test note!`",
    "CourseId": "1",
    "StudentId": "{{danUserID}}"
}

### insert notes
POST {{studentNotesUri}}/notes
Accept: application/json
Content-Type: application/json

[ {  "NoteTitle": "Smth meaningful",
    "NoteContent": "`Hi, this is a second test note!`",
    "CourseId": "1",
    "StudentId": "{{danUserID}}"
},
{  "NoteTitle": "Smth meaningful 2",
    "NoteContent": "`Hi, this is a third test note!`",
    "CourseId": "1",
    "StudentId": "{{danSecondUserID}}"
}
]

### get student course notes
GET {{studentNotesUri}}/student/{{danUserID}}/course/1/notes

### get student course note
GET {{studentNotesUri}}/student/{{danUserID}}/course/1/note/1

### edit note
PUT {{studentNotesUri}}/student/{{danUserID}}/course/1/note/1
Accept: application/json
Content-Type: application/json

{   "NoteContent": "`Hi, this is a fourth test note!`"
}

### delete student course note
Delete {{studentNotesUri}}/student/{{danUserID}}/course/1/note/2

### insert new group
POST {{studentNotesUri}}/studyGroups
Accept: application/json
Content-Type: application/json

{
    "StudyGroupName": "Tehnologi Web Proiect",
    "StudyGroupDescription": "Grup pentru proiectul la tehnologi web",
    "CourseId": "1"
}

### add student to group
POST {{studentNotesUri}}/studyGroupStudent
Accept: application/json
Content-Type: application/json

{
    "StudyGroupId": "1",
    "StudentId": "{{danUserID}}"
}

### get group students
GET {{studentNotesUri}}/studyGroup/1/students

### get students not in group
GET {{studentNotesUri}}/studyGroup/7/students/external

### get student groups
GET {{studentNotesUri}}/student/{{danSecondUserID}}/studyGroups

### get course groups
GET {{studentNotesUri}}/course/1/studyGroups

### remove student from study group
Delete {{studentNotesUri}}/studyGroup/1/students/{{danUserID}}

### delete study group
Delete {{studentNotesUri}}/studyGroup/2

### create invitation
POST {{studentNotesUri}}/invitation
Accept: application/json
Content-Type: application/json

[{
    "StudentId": "{{danSecondUserID}}",
    "InviterId": "{{danUserID}}",
    "InviterName": "Mamaliga Paraschiv Dan",
    "StudyGroupId": "7",
    "StudyGroupName": "test-invite-1"
},
{
    "StudentId": "{{danSecondUserID}}",
    "InviterId": "{{danUserID}}",
    "InviterName": "Mamaliga Paraschiv Dan",
    "StudyGroupId": "10",
    "StudyGroupName": "test-invite-2"
}
]

### get student invitations
GET {{studentNotesUri}}/student/{{danSecondUserID}}/invitation

### delete student invitation
Delete {{studentNotesUri}}/invitation/7
